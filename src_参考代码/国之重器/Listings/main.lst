C251 COMPILER V5.60.0,  main                                                               25/09/23  21:38:01  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE main
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil5\load\C251\BIN\C251.EXE main.c LARGE INTR2 BROWSE INCDIR(.\user;.\user\Dianci) DEBUG PRINT(
                    -.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj) 

stmt  level    source

    1          /*LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL
    2          【平    台】北京龙邱智能科技STC16核心板
    3          【编    写】chiusir
    4          【E-mail  】chiusir@163.com
    5          【软件版本】V1.1 版权所有，单位使用请先联系授权
    6          【最后更新】2021年1月23日
    7          【相关信息参考下列地址】
    8          【网    站】http://www.lqist.cn
    9          【淘宝店铺】http://longqiu.taobao.com
   10          ------------------------------------------------
   11          【IDE】STC16
   12          【Target 】 C251Keil5.6及以上
   13          【SYS PLL】 30MHz使用内部晶振
   14          =================================================================
   15          STC16相关配套视频：
   16          龙邱科技B站网址：https://space.bilibili.com/95313236
   17          STC16环境下载参考视频： https://www.bilibili.com/video/BV1gy4y1p7T1/
   18          STC16一体板子介绍视频： https://www.bilibili.com/video/BV1Jy4y1e7R4/
   19          =================================================================
   20          下载时, 选择时钟 30MHZ (用户可自行修改频率).
   21          STC16F初次下载:先用IRCBND=0，ISP界面设置为24M，
   22          芯片最后一行2038...然后IRCBND=0，下载频率为30M；
   23          芯片最后一行2010...或者IRCBND=1，下载频率为30M；
   24          官方出库批次不同，略有差异，好用为准！！！
   25          =================================================================
   26           【注意事项】注意，一定要对舵机打角进行限制
   27           使用龙邱母板测试舵机流程：
   28           1.先使用万用表测量电池电压，务必保证电池电压在7V以上，否则无力不反应！
   29           2.然后确定舵机供电电压，SD5/SD012舵机用5V供电，S3010用6-7V供电！！！
   30           3.把舵机的舵盘去掉，让舵机可以自由转动；
   31           4.烧写程序并运行，让舵机转动到中值附近；如果没反应重复1-2步，或者调整舵机的PWM频率计占空比，能受控为准；
   32           5.舵机受控后用手轻转，舵机会吱吱响，对抗转动，此时可以装上舵盘；
   33           6.按键K0/K1确定舵机的左右转动极限，并记下来，作为后续限幅防止舵机堵转烧毁！
   34          QQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQ*/
   35          
   36          #include "include.h"
   37          #include "LQ_PID.h"
   38          
   39          pid_param_t Speed_PID;
   40          pid_param_t Direc_PID;
   41          //开关状态变量
   42          uint8 key1_status = 1;
   43          uint8 key2_status = 1;
   44          uint8 key3_status = 1;
   45          //上一次开关状态变量
   46          uint8 key1_last_status;
   47          uint8 key2_last_status;
   48          uint8 key3_last_status;
   49          
   50          //开关标志位
   51          uint8 key1_flag;
   52          uint8 key2_flag;
   53          uint8 key3_flag;
   54          char key_flag=1;
   55          /*LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL
   56          【函数名】void main(void)  
   57          【功  能】主函数
   58          【参数值】无
C251 COMPILER V5.60.0,  main                                                               25/09/23  21:38:01  PAGE 2   

   59          【返回值】无 
   60          【最后更新】2021年1月22日 
   61          【软件版本】V1.0
   62          QQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQ*/
   63          void main(void)  
   64          {  
   65   1        sysinit();  
   66   1        UART4_config(2);            // 使用定时器2做串口4的波特率生成时钟
   67   1        OLED_Init();                // OLED初始化
   68   1       // OLED_CLS();                 // 清屏   
   69   1        OLED_P14x16Str(0,2,(unsigned char*)"北京龙邱智能科技");   // 字符串显示
   70   1        //OLED_P6x8Str(0,4,"Long Qiu i.s.t.");                    // 字符串显示
   71   1        delayms(200);
   72   1        //Test_GPIO_LED();
   73   1        //Test_ICM20689();
   74   1        ICM20689_Init();
   75   1        GPIO_KEY_Init();            // 按键初始化
   76   1        MotorInit(12500);
   77   1        ADC_Init();                 // ADC初始化
   78   1        Timer34EncInit();           // 编码器接口初始化
   79   1        Timer0_init();
   80   1        //Timer1_init();
   81   1        OLED_CLS();                 // 清屏   
   82   1        GPIO_LED_Init();  
   83   1        
   84   1          //PID参数设置
   85   1          PidInit(&Speed_PID);
   86   1          PidInit(&Direc_PID);
   87   1          Speed_PID.kp = 0;
   88   1          Speed_PID.ki = 0;
   89   1          Speed_PID.kd = 0;
   90   1          Direc_PID.kp = 0;
   91   1          Direc_PID.ki = 0;
   92   1          Direc_PID.kd = 0;
   93   1        
   94   1        EnableInterrupts;                    // 允许中断
   95   1        //Test_ComKEY_Tft();
   96   1        //Test_ADC();
   97   1        //TestMotor();
   98   1        //TestServo();
   99   1        //TestEncoder();
  100   1        //ElectroMagneticCar();
  101   1        while (1)
  102   1        {   
  103   2          //InductorNormal();
  104   2          
  105   2          OLED_show();
  106   2          
  107   2          key1_last_status = key1_status;
  108   2          key2_last_status = key2_status;
  109   2          key3_last_status = key3_status;
  110   2          //读取当前按键状态
  111   2          key1_status = P70;
  112   2          key2_status = P71;
  113   2          key3_status = P72;
  114   2      
  115   2          //检测到按键按下之后  并放开置位标志位
  116   2          if(key1_status && !key1_last_status)    key1_flag = 1;
  117   2          if(key2_status && !key2_last_status)    key2_flag = 1;
  118   2          if(key3_status && !key3_last_status)    key3_flag = 1;
  119   2      
  120   2          //标志位置位之后，可以使用标志位执行自己想要做的事件
  121   2          if(key1_flag)
  122   2          {
  123   3              key1_flag = 0;//使用按键之后，应该清除标志位
  124   3              key_flag*=-1;
C251 COMPILER V5.60.0,  main                                                               25/09/23  21:38:01  PAGE 3   

  125   3          }
  126   2      
  127   2          if(key2_flag)
  128   2          {
  129   3              key2_flag = 0;//使用按键之后，应该清除标志位
  130   3              if(key_flag==1)Go+=1;
  131   3              if(key_flag==-1)speed_i+=1;
  132   3          }
  133   2      
  134   2          if(key3_flag)
  135   2          {
  136   3              key3_flag = 0;//使用按键之后，应该清除标志位
  137   3              if(key_flag==1)speed_p-=1;    
  138   3              if(key_flag==-1)speed_i-=1;
  139   3          } 
  140   2        }
  141   1      }
  142          
  143          /*LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL
  144          【函数名】void sysinit(void)  
  145          【功  能】部分系统功能初始化
  146          【参数值】无
  147          【返回值】无 
  148          【最后更新】2021年1月22日 
  149          【软件版本】V1.0
  150          QQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQ*/
  151          void sysinit(void)  
  152          { 
  153   1        WTST = 0; 
  154   1        P_SW2 |= 0x80;  
  155   1        // 看单片机最下面一行的前5位，2010A，30M需要 IRCBAND=1; IRCBAND=0; 频率改变
  156   1        // 看单片机最下面一行的前5位，2038A，30M需要 IRCBAND=0; 
  157   1        IRCBAND=1;              // 1：35M频段；0：24M频段
  158   1        //IRTRIM =0;            // 频率校正，用通过ISP校正
  159   1        //LIRTRIM=0;            // 频率校正，用通过ISP校正
  160   1        CLKDIV = 0;             // 分频设置
  161   1        P_SW2 &= 0x7F;
  162   1        RSTCFG|=1<<4;           // 使能P5.4复位管脚  
  163   1        P0M1 =0x40; P0M0 = 0;   // 设置为准双向口,P0.6  0.7为输入口，编码器用
  164   1        P0PU =0x40;             // P0.6  0.7使能内部4.1K上拉电阻
  165   1        P1M1 = 0;   P1M0 = 0;   // 设置为准双向口
  166   1        P3M1 = 0;   P3M0 = 0;   // 设置为准双向口
  167   1        P4M1 = 0;   P4M0 = 0;   // 设置为准双向口
  168   1        P5M1 = 0;   P5M0 = 0;   // 设置为准双向口
  169   1        //P6M1 = 0;   P6M0 = 0; // 设置为准双向口，OLED用
  170   1        //P7M1 =0xFF; P7M0 = 0; // 设置为准双向口，舵机和按键使用
  171   1        P7PU =0xFF;             // 设置为准双向口,P7.0123为输入口接按键,P7.4567为输出口接电机驱动
  172   1        P40 = 0;                // 打开LED电源 
  173   1        EA=0;                   // 关闭总中断
  174   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       501     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =       106     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
C251 COMPILER V5.60.0,  main                                                               25/09/23  21:38:01  PAGE 4   

  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        41     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
